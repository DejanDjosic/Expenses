{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\Desktop\\\\radnidir\\\\Expenses\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.items.filter(expense => {\n    if (expense.date.getFullYear().toString() === filteredYear) return expense;\n  });\n  let ExpensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    children: \"There are no expenses to display for this year\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n  if (filteredExpenses.length > 0) ExpensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n    title: expense.title,\n    amount: expense.amount,\n    date: expense.date\n  }, expense.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), ExpensesContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","ExpensesContent","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","amount","id","className","selected","onChangeFilter","_c","$RefreshReg$"],"sources":["C:/Users/Dejan/Desktop/radnidir/Expenses/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    if (expense.date.getFullYear().toString() === filteredYear) return expense;\r\n  });\r\n\r\n  let ExpensesContent = (\r\n    <p style={{ color: \"red\" }}>\r\n      There are no expenses to display for this year\r\n    </p>\r\n  );\r\n\r\n  if(filteredExpenses.length>0)\r\n  ExpensesContent= filteredExpenses.map((expense) => (\r\n    <ExpenseItem\r\n      title={expense.title}\r\n      amount={expense.amount}\r\n      date={expense.date}\r\n      key={expense.id}\r\n    />\r\n  ))\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      {ExpensesContent}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EAExD,MAAMW,mBAAmB,GAAIC,YAAY,IAAK;IAC5CF,eAAe,CAACE,YAAY,CAAC;EAC/B,CAAC;EAED,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAAEC,OAAO,IAAK;IACvD,IAAIA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKV,YAAY,EAAE,OAAOO,OAAO;EAC5E,CAAC,CAAC;EAEF,IAAII,eAAe,gBACjBf,OAAA;IAAGgB,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAC,QAAA,EAAC;EAE5B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CACJ;EAED,IAAGd,gBAAgB,CAACe,MAAM,GAAC,CAAC,EAC5BR,eAAe,GAAEP,gBAAgB,CAACgB,GAAG,CAAEb,OAAO,iBAC5CX,OAAA,CAACJ,WAAW;IACV6B,KAAK,EAAEd,OAAO,CAACc,KAAM;IACrBC,MAAM,EAAEf,OAAO,CAACe,MAAO;IACvBd,IAAI,EAAED,OAAO,CAACC;EAAK,GACdD,OAAO,CAACgB,EAAE;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CACF,CAAC;EAEF,oBACEtB,OAAA,CAACH,IAAI;IAAC+B,SAAS,EAAC,UAAU;IAAAV,QAAA,gBACxBlB,OAAA,CAACF,cAAc;MACb+B,QAAQ,EAAEzB,YAAa;MACvB0B,cAAc,EAAExB;IAAoB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EACDP,eAAe;EAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEX,CAAC;AAACnB,EAAA,CApCIF,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}